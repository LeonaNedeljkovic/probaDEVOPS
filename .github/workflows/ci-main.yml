name: Feature Branch

on:
  push:
    branches:
      - 'main'

jobs:

#  test:
#     name: Unit Test
#     runs-on: ubuntu-18.04

#     steps:
#       - uses: actions/checkout@v2
#       - name: Set up JDK 11
#         uses: actions/setup-java@v1
#         with:
#           java-version: 11
#       - name: Maven Package
#         working-directory: agent-user-service
#         run: mvn -B clean package -DskipTests
#       - name: Maven Verify
#         working-directory: agent-user-service
#         run: mvn -B clean verify -Dspring.profiles.active=test -Dspring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration


#       - name: Publish - GitHub Packages
#         working-directory: agent-user-service
#         run: mvn -B clean deploy -DskipTests
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
#       - name: Bump version and push tag
#         id: tag_version
#         uses: mathieudutour/github-tag-action@v5.5
#         with:
#           append_to_pre_release_tag: "dev"
#           default_bump: patch
#           github_token: ${{ secrets.GITHUB_TOKEN }}

#       - name: Create a GitHub prerelease
#         uses: actions/create-release@v1
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           tag_name: ${{ steps.tag_version.outputs.new_tag }}
#           release_name: Prerelease ${{ steps.tag_version.outputs.new_tag }}
#           prerelease: true

 sonar:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix: { dir: ['agent-user-service', 'product-service'] }
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      
      - name: Build and analyze
        working-directory: agent-user-service
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dspring.profiles.active=test -Dspring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration

      - name: Sleep for 5 seconds
        uses: jakejarvis/wait-action@master
        with:
          time: '15s'
      
      - name: Build and analyze product-service
        working-directory: product-service
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dspring.profiles.active=test -Dspring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
          
          
#  sonarcloud:
#     name: SonarCloud
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#         with:
#           fetch-depth: 0
#       - name: SonarCloud Scan
#         uses: SonarSource/sonarcloud-github-action@master
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        
#       - name: Cache SonarCloud packages
#         uses: actions/cache@v1
#         with:
#           path: ~/.sonar/cache
#           key: ${{ runner.os }}-sonar
#           restore-keys: ${{ runner.os }}-sonar
#       - name: Cache Maven packages
#         uses: actions/cache@v1
#         with:
#           path: ~/.m2
#           key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
#           restore-keys: ${{ runner.os }}-m2
#       - name: Build and analyze
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#         run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
